---
import { Image } from "astro:assets";
import { useTranslations } from "../i18n/utils.ts";
import { i18n, languages } from "../i18n/ui.ts";

const pages = [ "stack", "projects" ];
const lang = Astro.params.lang || "en";
const tr = useTranslations(lang as never);
---

<div class="navigation-bar">
    <nav class="navigation" id="navbar" aria-label="Navigation Bar">
        <div class="left-side">
            <a rel="author" href="https://github.com/retrozinndev">
                <Image class="profile-pic" src="https://github.com/retrozinndev.png" width=32 height=32 alt="Me" />
            </a>
        </div>
        <ul class="links">
            <li class="link">
                <a href={ `/${lang}#` } target="_self">{ tr("nav.home") }</a>
            </li>
            <li class="link">
                <a href={`/${lang}#about`} target="_self">{ tr("nav.about") }</a>
            </li>
            {
                pages.map(page => (
                    <li class="link">
                        <a href={`/${lang}/${page}`} target="_self">{ tr(`nav.${page}`) }</a>
                    </li>
                ))
            }
            <li class="action">
                <a href="#" id="nav-toggle-theme"><span id="nav-theme-icon" class="nf nf-oct-sun"></span></a>
            </li>
        </ul>
        <select name="Language" id="langSelector">
            {
                languages.map(l => (
                    <option value=`${l}`>{ i18n[l as keyof typeof i18n]["language" as keyof typeof i18n] }</option>
                ))
            }
        </select>
    </nav>
</div>

<script>

    import { getStoredTheme, getThemes, applyTheme, getTheme, toggleTheme } from "../scripts/theme.ts";
    import { getLanguageFromURL } from "../i18n/utils.ts";

    const navigation = document.getElementById("navbar") as HTMLDivElement;
    const toggleThemeButton = document.getElementById("nav-toggle-theme") as HTMLLinkElement;
    const toggleThemeIcon = document.getElementById("nav-theme-icon") as HTMLSpanElement;
    const languageSelector = document?.getElementById("langSelector") as HTMLSelectElement;

    window.onscroll = () => {
        if(navigation) {
            if(window.scrollY >= 24) {
                navigation.classList.add("scrolled");
            } else {
                navigation.classList.remove("scrolled");
            }
        } 
    };

    if(toggleThemeButton && toggleThemeIcon) {
        toggleThemeButton.onclick = () => {
            toggleTheme();
            applyTheme(getTheme());
            if (getTheme() == "dark")
                toggleThemeIcon.className = "nf nf-oct-sun";
            else  
                toggleThemeIcon.className = "nf nf-oct-moon";
        };

        if (getTheme() == "dark")
            toggleThemeIcon.className = "nf nf-oct-sun";
        else 
            toggleThemeIcon.className = "nf nf-oct-moon";
    }

    window.onload = () => {
        applyTheme(getStoredTheme() || getThemes()[0]);

        if(languageSelector) {
            languageSelector.value = getLanguageFromURL(new URL(window.location.href));

            languageSelector.onchange = (event: Event) => {
                const eventTarget = event.target as HTMLSelectElement, 
                newLanguage = eventTarget?.value as string;

                window.location.href = `/${newLanguage}`;
            }
        }
    }

</script>

<style lang="scss">

    @import "../styles/_colors.scss";

    div.navigation-bar {
        position: sticky;
        display: block;
        padding: 6px;
        height: auto;
        max-width: 100%;
        top: 12px;
        z-index: 999;
    }

    #navbar {
        display: flex;
        border-radius: 12px;
        font-size: medium;
        justify-content: center;
        align-items: center;
        padding: 6px 20px;
        max-width: 100%;
        min-height: 60px;
        transition: 120ms linear;
        color: inherit;
        flex-wrap: wrap;
    }

    body.dark nav.navigation {
        background-color: $bg-navbar-color-dark;
    }

    body.light nav.navigation {
        background-color: $bg-navbar-color-light;
    }

    body.dark .navigation.scrolled {
        box-shadow: 0 0 25px 2px rgb(0, 0, 0);
    }

    body.light .navigation.scrolled {
        box-shadow: 0 0 5px 2px darkgray;
    }

    .left-side span.website {
        margin: 0;
        vertical-align: center;
    }

    .left-side img {
        border-radius: 8px;
    }

    #navbar ul {
        display: flex;
        flex-direction: row;
        text-align: center;
        margin: 0 auto;
        width: max-content;
        flex-wrap: wrap;
        padding: 0 8px;
    }

    #navbar ul li {
        margin-block: .25em;
        margin-inline: .5em;
        list-style: none;
        padding: 0;

        &:first-child {
            margin-inline-start: 0px;
        };

        &:last-child {
            margin-inline-end: 0px;
        };
    }

    #langSelector {
        outline: none;
        background: none;
        box-shadow: none;
        border: 1px solid gray;
        padding-inline: 10px;
        padding-block: 4px;
        margin: 0 0 0 0;
        border-radius: 8px;
    }

    a, label {
        color: inherit;
        text-decoration: none;
        font-weight: bold;
        transition: 250ms linear;
    }

    body.dark a:hover {
        color: $accent-color;
    }

    body.light a:hover {
        color: $accent-color-dark;
    }

    @media screen and (max-width: 700px) {
        #navbar {
            padding-block: 12px;
        }
    }

</style>
